// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ImperialFamily.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBDoubleValue;
@class imperial_concubine;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum gender_type

typedef GPB_ENUM(gender_type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  gender_type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  gender_type_Male = 0,
  gender_type_Female = 1,
};

GPBEnumDescriptor *gender_type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL gender_type_IsValidValue(int32_t value);

#pragma mark - ImperialFamilyRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ImperialFamilyRoot : GPBRootObject
@end

#pragma mark - emperor

typedef GPB_ENUM(emperor_FieldNumber) {
  emperor_FieldNumber_Num = 1,
  emperor_FieldNumber_Name = 2,
  emperor_FieldNumber_Gender = 3,
  emperor_FieldNumber_ConcubinesArray = 4,
  emperor_FieldNumber_FatherAge = 5,
  emperor_FieldNumber_MotherAge = 6,
  emperor_FieldNumber_PaMotherAge = 7,
  emperor_FieldNumber_PaFatherAge = 8,
  emperor_FieldNumber_PreName = 9,
  emperor_FieldNumber_Conc = 10,
  emperor_FieldNumber_Tang = 11,
  emperor_FieldNumber_Song = 12,
  emperor_FieldNumber_Yuan = 13,
  emperor_FieldNumber_Ming = 14,
  emperor_FieldNumber_Qing = 15,
  emperor_FieldNumber_Infomations = 18,
};

typedef GPB_ENUM(emperor_Dynasty_OneOfCase) {
  emperor_Dynasty_OneOfCase_GPBUnsetOneOfCase = 0,
  emperor_Dynasty_OneOfCase_Tang = 11,
  emperor_Dynasty_OneOfCase_Song = 12,
  emperor_Dynasty_OneOfCase_Yuan = 13,
  emperor_Dynasty_OneOfCase_Ming = 14,
  emperor_Dynasty_OneOfCase_Qing = 15,
};

@interface emperor : GPBMessage

/**
 *    enum gender_type
 *    {
 *        MALE    = 0;
 *        FEMALE    = 1;
 *    };
 **/
@property(nonatomic, readwrite) uint32_t num;

@property(nonatomic, readwrite) int64_t name;

@property(nonatomic, readwrite) gender_type gender;

@property(nonatomic, readonly) emperor_Dynasty_OneOfCase dynastyOneOfCase;

@property(nonatomic, readwrite) int64_t tang;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *song;

@property(nonatomic, readwrite, copy, null_resettable) NSString *yuan;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ming;

@property(nonatomic, readwrite, copy, null_resettable) NSString *qing;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<imperial_concubine*> *concubinesArray;
/** The number of items in @c concubinesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger concubinesArray_Count;

@property(nonatomic, readwrite) uint64_t fatherAge;

@property(nonatomic, readwrite) int64_t motherAge;

@property(nonatomic, readwrite) float paMotherAge;

@property(nonatomic, readwrite) double paFatherAge;

@property(nonatomic, readwrite, copy, null_resettable) NSData *preName;

@property(nonatomic, readwrite, strong, null_resettable) imperial_concubine *conc;
/** Test to see if @c conc has been set. */
@property(nonatomic, readwrite) BOOL hasConc;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringInt32Dictionary *infomations;
/** The number of items in @c infomations without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infomations_Count;

@end

/**
 * Fetches the raw value of a @c emperor's @c gender property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t emperor_Gender_RawValue(emperor *message);
/**
 * Sets the raw value of an @c emperor's @c gender property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setemperor_Gender_RawValue(emperor *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'dynasty'.
 **/
void emperor_ClearDynastyOneOfCase(emperor *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
